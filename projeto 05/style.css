*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
:root{
    --ff-heading:'Epilogue', sans-serif;
    --ff-texting: 'Open sans', sans-serif;
    --hue: 250;
    --bg-primary: hsl(var(--hue), 22%, 20%);
    --fc-primary:hsl(var(--hue), 0%, 100%);
    --fc-secondary: hsl(var(--hue), 50%, 80%);
    --fc-secondary-dark:hsl(var(--hue), 100%, 11%, 1);

    font-size: 62,5%;
    --fs-body: 1.6rem;
    /*o Clamp permite selecionar um valor intermediario dentro de uma 
    faixa de valor, recebe tres parametros=> minimo, desejavel e maximo*/
    --fs-heading: clamp(2rem, 1rem + 5vw, 5.6rem);
    --fs-heading-sm: clamp(3rem, 0.5rem + 3vw, 4rem);
}

body{
    font-family: var(--ff-texting);
    color: var(--fc-primary);
    background-color: var(--bg-primary);

    font-size: var(--fs-body);
}
.page{
    /*O valor retornado será o valor preferencial, 
    até que esse valor preferencial seja menor que o 
    valor mínimo (ponto no qual o valor mínimo será retornado) 
    ou maior que o valor máximo (ponto no qual o máximo será retornado)*/
   max-width: calmp(33rem, 30rem + 60vw, 117rem);
   padding: 0 5rem;
   margin: 0 auto; 
}
@media (min-width: 700px){
    main{

        grid-template-columns: 1fr 1fr;
    }
    
}
@media (min-width: 1193px ){
  
    main {
        /*Nesta propriedade é importante quebrar a linha
        fechando com aspas, cada linha
        para que o grid-template-areas atinga o desejado*/
        grid-template-areas: "A B B" 
                            "C C D";
    }

    main div:nth-child(1){
        grid-area: A;
    }
    main div:nth-child(2){
        grid-area: B;
    }
    main div:nth-child(3){
        grid-area: C;
    }
    main div:nth-child(4){
        grid-area: D;
    }
}


img{
    width: 100%;
    height: auto;
}

header{
    margin: 10rem 0 8rem;
    font-family: var(--ff-heading);
    text-align: center;

    animation: topdown 700ms;
}

header h1{
    font-weight: 800;
    line-height: 4.8rem;
    font-size: var(--fs-heading);
}

header p{
    font-weight: 400;
    text-transform: uppercase;
    color: var(--fc-secondary);
    /*define o espaçamento entre as letras*/
    letter-spacing: 3px;
    /*define a altura da linha*/
    line-height: 3.2rem;
    
}
main{
    display: grid;
    gap: 3.5rem;
    animation: downtop 700ms 350ms backwards;
}


/* esse faz praticamente o mesmo que a propriedade a cima.
main .card + .card{
    margin-top: 25rem;
}*/
.card{
    /*esse position relative faz com que o h2
    fique absoluto somente dentro dessa div*/
    position: relative;
    font-family: var(--ff-heading);

}

.card h2{
    /*esse position absolute fica relativo 
    dentro da div com a class card*/
    position: absolute;
    bottom: 5.2rem;
    left: 2.8rem;

    font-size: var(--fs-heading-sm);
    font-weight: 800;

    display: flex;
    flex-direction: column;
    gap: 2.8rem;
}
.card img{
  height: 41.6rem;
  /*encaixe o obejeto que é a imagem
   cobrindo toda a caixa usando o centro 
   da imagem como referencia para centralizar na caixa*/
  object-fit: cover;

  /*filter esta ajustando o brilho e a saturação da imagem*/
  filter: brightness(0.5) saturate();
  border-radius: 6px;

  transition: all 400ms;
}
.card img:hover{
    /*essa propriedade faz com que a imagem salte ou de um zoom
    passando o mouse por cima*/
    transform:scale(1.1);
    opacity: 0.5;
}
.card h2 span{
    border-radius: 2rem;
    background: var(--fc-primary);
    font-size: var(--fs-body);
    font-weight: 400;
    color: var(--fc-secondary-dark);
    padding: 0 1.6rem;
    /*ajusta a largura da caixa a largura do
     conteudo. width define a largura da caixa
     neste caso o fit-content esta definindo que a caixa tera o 
     tamanho do conteudo*/
    width: fit-content;
    height: 3.8rem;

    display: inline-flex;
    align-items: center;
   
}


@keyframes topdown{
    0%{
        opacity: 0;
        transform: translatex(-15px);
    }
    
    100%{
        opacity: 1;
        transform: translatex(0);
    }
}

@keyframes downtop{
    0%{
        opacity: 0;
        transform: translateX(15px);
    }
    100%{
        opacity: 1;
        transform: translateX(0);
    }
}